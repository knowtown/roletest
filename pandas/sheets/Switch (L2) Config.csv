,Unnamed: 0,! Green indicates the config is unique to this tab (Switch (L2) Config),Unnamed: 2,Unnamed: 3,Unnamed: 4,Unnamed: 5,Unnamed: 6
0,,!,,,,,
1,,! NETFLOW commands from Netflow tab (if Netflow is required on this device),,"! Normally we only export netflow on L3 ""core"" switches/routers",,,
2,,sdm prefer routing,,"! This should be used for 3560, 3750 stacks that are doing ip routing",,,
3,,!,,,,,
4,,ip dhcp snooping,,"! Enables DHCP snooping, which denies certain DHCP messges coming in from ports they shouldn't.",,,
5,,ip dhcp snooping vlan 1-1000,,! For switches that don't support extended vlans,,,
6,,ip dhcp snooping vlan 1-4094,,,,,
7,,no ip dhcp snooping information option,,"! This is added because cisco has added some features in 15.0.2 & 12.2.55 that are causing dhcp to not work. Here, we are basically disabling DHCP Option 82. So, in DHCP, you have DHCP Options, which are basically added because different vendor devices may require additional information on top of just an IP address, mask, and gateway (such as an IP Phone requiring the IP of a Call server, in addition to a normal IP address, mask, and gateway). One particular DHCP Option is Option 82, which is used as a sort of security measure to prevent just anyone from requesting DHCP addresses or posing as a fake DHCP server. With DHCP Option 82, the switch adds identifiers to the DHCP request packet that was sent by the host. Specifically, the switch adds its MAC address (the remote ID suboption) and the port identifier from which the packet is received from the host (the curcuit ID suboption). The DHCP server (if Option 82 capable), can use the remote ID and curcuit ID to verify the packet as legitimate (and also implement policies if desired, such as restricting the number of IP addresses that can be assigned to a single remote ID or circuit ID). If you wanted to implement this DHCP Option 82 on a switch, you would run the ""ip dhcp snooping information option"" command. However, we don't want to use it, so we are disabling it using the ""no"" form of the command.",,,
8,,snmp-server enable traps port-security trap-rate 10,,"! Port-security lets us restrict traffic through a port by limiting and identifying MAC addresses of the stations allowed to access the port. A security violation occurs if the maximum number of secure MAC addresses has been added to the address table and a workstation whose MAC address is not in the address table attempts to access the interface. If you configure the interface to be in Restrict violation mode for port-security, a port-security violation restricts data, causes the SecurityViolation counter to increment, and causes an SNMP Notification to be generated. The rate at which SNMP traps are generated can be controlled by the ""snmp-server enable traps port-security trap-rate"" command. This sets the maximum number of port-security traps sent per second. THe range is from 0 to 1000; the default value (""0"") causes an SNMP trap to be generated for every security violation, so there is no limit on the number per second - a trap is sent for every violation occurrence, no matter how quickly they occur. Here in our command, we are saying that we can only send a max of 10 port-security traps per second.",,,
9,,!,,,,,
10,,device-tracking upgrade-cli,,"! Applies to IOS_XE 16.x.x and above. This upgrades the CLI to use the upgraded ""device-tracking"" commands, and converts legacy IPDT and IPv6 Snooping commands to SISF-based device tracking commands (SISF-based, or Switch Integrated Security Features based, is the newer device tracking feature). After you run the command, only the new device-tracking commands are available on your device and the legacy commands are not supported.",,,
11,,yes,,"! The above command requires a response. The default answer is ""yes"" but we will just hard-input a ""yes"" as it is clearer to read here in the template",,,
12,,!,,,,,
13,,device-tracking policy DT_trunk_policy,,! Create a device tracking custom policy that we will apply to our trunk ports in the Interfaces tab,,,
14,, trusted-port,,! Sets up a trusted port. Disables the guard on applicable targets. Bindings learned through a trusted port have preference over bindings learned through any other port. A trusted port is given preference in case of a collision while making an entry in the table.,,,
15,, device-role switch,,"! Sets the role of the device attached to the port. It can be a node or a switch. In this case, we are using the ""switch"" option, which configures the attached device as a ""switch,"" which is appropriate since we will be applying this device tracking custom policy to trunk ports.",,,
16,, no protocol udp,,"! By default, all protocols are gleaned. Here we are saying we don't want to glean the UDP protocol. Remember that ""glean"" means the packet is sent to the CPU specifically to perform an ARP request.",,,
17,,!,,,,,
18,,service nagle,,"! Enables the Nagle algorithm which says you can only have 1 unacknowledged oustanding TCP message. Basically if you have an unacknowledged TCP message, the device should keep buffering input from the user into the next TCP segment. This is useful especially in Telnet sessions, where input from the user is typically 1 character at a time typed into the console. This would result in 1-byte of data and the usual 40-byte TCP header, which results in 41-bytes being sent for 1-byte of actual useful data. So this algorithm instructs the sending device that as long as it has an outstanding unacknowledted TCP segment, keep buffering input from the user into the next TCP segment you're going to send. This avoids sending individual characters per TCP segment (1-byte of data with 40 bytes of header)",,,
19,,no service pad,,"! Disables the Packet Assembler/Disassembler (PAD), which is only needed if you have X.25 links (X.25 was a suite of protocols used for packet-switched comms in WAN networks, implemented in the 1970's to carry voice over analog telephone lines ( dial-up networks) and used heavily in the 80's, then replaced by Frame Relay in the 90's.).",,,
20,,no service tcp-small-servers,,"! tcp-small-servers enables minor tcp services such as CHARGEN (character generation, which sends random characters back to the receiving host. Can be used to facilitate DoS attacks via replay of response), DAYTIME (sends back the current system date and time), DISCARD (service that simply discards received packets. Used for TCP and UDP code debugging as it is guaranteed to receive what is sent to it.), and ECHO (the receiver echos back an identical copy of the data it received. Was originally proposed for testing and measuring round-trip times in IP networks). Cisco security best practice is to disable this ""small-server"" service.",,,
21,,no service udp-small-servers,,"! Same as the tcp service above, but using UDP instead of TCP.",,,
22,,no service finger,,"! Finger (RFC 742) is a protocol that can be used to obtain information about users logged into a remote host or network device. Although it does not reveal any extremely sensitive information, it can be used by a potential attacker to gather information. Therefore Cisco recommends the service be disabled.",,,
23,,no ip bootp server,,"! BOOTP (RFC 951) is a protocol used in IP networks to auto-assign IP addresses to network devices from a configuration server (required a 1:1 mapping of MAC addresses and IP addresses, so was VERY difficult to manage). Since in modern-day we use DHCP instead (which doesn't need a 1:1 mapping of MAC address to IP), we can disable the BOOTP service.",,,
24,,service tcp-keepalives-in,,"! This service causes periodic generation of TCP keepalive messages, allowing the device to detect and drop broken TCP connections. This particular command generates keepalive packets on idle INCOMING connections (initiated by a remote host). Without this command, the far end has no way to know that a reboot or other connection loss has happened.",,,
25,,service tcp-keepalives-out,,"! This service causes periodic generation of TCP keepalive messages, allowing the device to detect and drop broken TCP connections. This particular command generates keepalive packets on idle OUTGOING connections (initiated by a user on the local network device). Without this command, the far end has no way to know that a reboot or other connection loss has happened.",,,
26,,diagnostic bootup level minimal,,"! Configures the bootup diagnostic level (triggers diagnostics when the device boots, i.e. the level of testing that occurs when the system or module is reset). The ""minimal"" option specifies minimal diagnostics.",,,
27,,service timestamps debug datetime localtime msec,,"! Configures IOS to timestamp debug messages. The ""datetime"" option means to time stamp with the date and time. The ""localtime"" option means to time stamp relative to the local time zone. The ""msec"" option means to include milliseconds in the date and time stamp.",,,
28,,service timestamps log datetime localtime msec,,"! Same as above, but for logging messages instead of debug messages.",,,
29,,service password-encryption,,"! The password-encryption service only affects plain-text passwords. Note that this does not affect any passwords configured with the ""secret"" keyword, as those are hashed with MD5. The password-encryption service uses a simple ""replace"" algorithm in accordance with a salt. To see how the algorithm works (it is quite simple), see this link: https://pen-testing.sans.org/resources/papers/gcih/cisco-ios-type-7-password-vulnerability-100566",,,
30,,no setup express,,"! disable the front button on a 3750/X to ""reset"" the switch",,,
31,,no vstack,,"! Disables the ""smart install"" feature. Smart Install can be used on certain models of switches (Cisco maintains a list here: https://community.cisco.com/t5/networking-documents/how-to-use-zero-touch-smartinstall/ta-p/3112248)",,,
32,,hostname ,,"! Sets the device host name. This value is also used when generating crypto keys (along with the value in the ""ip domain-name"" command).",,,
33,,!,,,,,
34,,logging origin-id hostname,,"! Adds an origin identifier to system logging messages sent to remote hosts (so you can tell where the log message came from). The ""hostname"" parameter specifies the hostname will be used as the message origin identifier.",,,
35,,logging buffered 65536 debugging,,"! Buffered logging uses the device's RAM to store log messages, instead of just displaying them on the console. The buffer of course has a fixed size, which you can configure. Old messages are deleted as new messages are added. Here, the buffer size (given in bytes) is 65536 bytes. The ""debugging"" argument is the name of the desired security level at which messages should be logged. Messages at or numerically lower then the specified level are logged. So debug messages are Level 7, so anything above Level 7 (Levels 1 - 6, which is basically everything) will get logged to the buffer.",,,
36,,no logging console,,! Here we want to avoid sending log messages to the console terminal.,,,
37,,logging file flash:logfile.txt 1000000 informational ,,! Logs to a file in flash so Local logging can be reviewed after a crash or reboot.,,,
38,,!,,,,,
39,,vtp mode transparent,,"! Sets the vtp mode to transparent. (Fun fact, this resets the VTP Revision number to 0 on the switch, so this is a good idea to run anyway even if you wanted to run VTP, to avoid the classic VTP ""blackout"" situation where you plug in a new switch that happens to have a VTP revision number higher than existing switches, and you turn on VTP on that new switch and it's blank VLAN database overrides the other switches and removes all VLANS from your network). This command basically means we do not want to use VTP. The VLAN Trunking Protocol (VTP) is a way to centrally manage VLANs by creating a VTP domain and allowing devices configured to join that VTP domain to share VLAN database information to dynamically keep their VLAN databases up-to-date. The risks of this protocol (e.g. VTP Wipeout) far outweigh the benefits, so we disable the protocol.",,,
40,,!,,,,,
41,,no enable password,,"! Clears any passwords configured with the ""password"" command, which would store them in clear text, or at best they would be encrypted with the service-encryption cipher, which is extremely easy to crack (ask Kent Yeabower for a PowerShell script that does it).",,,
42,,enable secret 9 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX,,! Sets the enable secret,,,
43,,username tombstone privilege 15 secret 9 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX,,! Sets a local username and secret. This is the recommended practice before configuring AAA.,,,
44,,!,,,,,
45,,aaa new-model,,"! Sets the default login method to be AAA. NOTE THAT THIS COMMAND IS NEEDED TO ENABLE THE NEW ""TACACS SERVER"" STYLE COMMANDS BELOW. With just this line configured, local authentication is immediately applied to all lines and interfaces (except console line ""line con 0""). So, you would have to be authenticated using the local database of the router. (If doing this manually (not with this template), recommended to define a username and password on the device before running this command, and to save the configuration right before configuring AAA so that you can simply reload the device to recover from any lockouts.)

You will notice that if you look at the description of the ""aaa new-model"" command, it says that it enables ""NEW"" access control functions and disables ""OLD"" commands. What were the ""OLD"" commands then?

Well, instead of AAA, the ""old"" model has been called ""just Authentication, with little Authorization and no real Accounting"". ""Historically older methods of AAA have revolved around line level passwords and secrets. This leveraged user-set passwords on the various access points around the router to stop someone from directly logging onto the device and making changes."" So basically, you would set your password and/or username on the various lines/entry points on the router, which would provide Authentication, and you could set ""privilege"" levels for the users which gave a little Authorization. But remember this was all locally set on the router, not over the network.
When you run ""aaa new-model"", ""this will turn the [AAA] engine on and immediately overwrite/remove all line-level passwords and old methods of authentication. With this in mind, if you lose connection to this router at any stage, you will not be able to get back on as there will be no rules to govern the ""Auth"" part of the AAA, and the default is to allow NO access unless configured to allow ""no auth"". (a simple reboot will however return you to the old setup as the command requires the usual saves).""

So, when you run aaa new-model, you will notice that any ""login"" commands will be removed from the VTY lines (any ""password"" commands will remain but will now be ignored). The Console line config should remain the same. I have heard that there is a theory that originally Cisco wrote the ""aaa new-model"" code to also apply to the Console line, but too many people were getting locked out of their routers so they backed it off. Not sure if this is true or if Cisco originally intended to exclude the Console line from ""aaa new-model"".

Basically, without ""aaa new-model"" the default for authentication  (on console and vty) is to use the line password. But when you enable ""aaa new-model"" then the default for authentication becomes local (i.e. username/password).

Also, in terms of Authorization, bear in mind, ""when configuring ""aaa new-model"", authorization is NOT configured by default on newer IOS images. Therefore, when logging into a Cisco Router and/or Switch with a user account that has level 15 privileges, you will not automatically be placed into privileged (Exec) mode as you were in the older non-aaa ""login local"" Authentication method. To fix this, you'll need to add a AAA statement to specify console Authorization.""

Sources:
https://networkengineering.stackexchange.com/questions/30037/what-was-the-aaa-old-model
https://community.cisco.com/t5/switching/after-enable-aaa-new-model-then-telnet-prompt-username-needed/td-p/2097209",,,
46,,aaa authentication login default group tacacs+ local line,,"! Setting up the Authentication part of AAA for users who want exec access into the device. The command defines a named list of authentication methods (in this case we are using the default named list called ""default"" which is used when a named list is NOT specified in this command (so it's basically the ""built-in"" named list). This ""default"" list is applied everywhere by default when AAA is enabled (i.e. when you run ""aaa new-model"" above) and then defines a method for authentication. So basically this is a named ""list of authentication methods."" Here, we are saying the ""default"" behavior (i.e. the behavior of the ""default authentication list"") is to try TACACS+ first (""group tacacs+"", which means to use the list of all tacacs+ hosts that you've defined elsewhere in the config), and if no response (i.e. an error occurs), try the local router database, and if no response, try the line authentication method. Note that the subsequent authentication method is tried ONLY if the previous method returns an ERROR, not if it fails.",,,
47,,aaa authentication login NO-TACACS line,,"! Setting up the Authentication part of AAA for users who want exec access into the device. The command defines a named authentication list (in this case we are creating a named list called ""NO-TACACS"") and then saying the authentication method for that method list (""NO-TACACS"") is line authentication. (Basically named method lists like ""NO-TACACS"" is just a way to group various combinations of authentication/authorization/accounting methods.) When you create a named method list, you are defining a particular list of methods for the indicated authentication/authorization/accounting type. Once a named list (e.g. ""NO-TACACS"") is created, it must be applied to a line or interface for it to come into effect (we will do this below on line console 0).",,,
48,,aaa authorization exec default group tacacs+ if-authenticated ,,"! The ""aaa authorization exec"" command determines if the user is allowed to run an EXEC shell. Exec authorization is only carried out over vty and tty lines. Here, we're saying the ""default"" behavior (i.e. we're using the ""default"" named list which is applied everywhere by default, so it's basically the ""built-in"" named list) is that all users must be authenticated with TACACS+ for an EXEC shell. The ""if-authenticated"" part of the command is another authorization method (like group tacacs, local, group radius, etc.), which says that after the initial authentication, if the ""authorization"" piece fails between the device (router/switch) and the TACACS+ server, the device will go ahead and say the user is ""authorized"" because they were previously authenticated. Otherwise, without the ""if-authenticated"" authorization method, if the authentication was successful and the ""authorization"" part failed between the device and the TACACS+ server, the login as a whole would fail. Also note that the ""if-authenticated"" method is a terminating method (i.e. any authorization methods listed after it will never be evaluated). For authorization using TACACS+, the router/switch exchanges authorization information with the TACACS+ security daemon. TACACS+ authorization defines specific rights for users by associating attribute-value (AV) pairs, which are stored in a database on the TACACS+ security server, with the appropriate user. Also, see above for explanation on the ""group tacacs+"" keywords.

The info in the below NOTE is confirmed with AAA debug messages.
NOTE: The ""if-authenticated"" piece of the command does not give the user their stated privilege level in the ""username"" command above. So if you had configured something like ""username PLAYER1 privilege 15 secret CISCO"" , you would need to use the ""local"" keyword in the Authentication command so that the device will look in the local user database, where it would see your configured username and the associated Privilege level.
Without the ""local"" keyword, the ""if-authenticated"" part of the command simply allows the login to succeed but it does not make the device look at the local user store, which means no Privilege level is loaded for the user, so the device default to the lowest Privilege level, which is 0. So, you would start at the ""switch>"" prompt and have to run the ""enable"" command and enter the enable password to get into Enable mode (which the AAA/MEMORY process would run ""free_user"" on your privilege 0 user, removing it from memory, and then immediately run ""create_user"" on your same userid which creates a new ""user"" object in memory but this time with a new Privilege level of 15. Note that it seems like it doesn't matter what your configured Privilege level is as long as you know the Enable password.).

Another fun fact: when you are logging into the console, there is of course no username associated with that login. However, when you run the ""enable"" command via the console, the AAA/MEMORY process runs ""create_user"" and creates a user called ""NULL"" with Privilege level 15 in memory, and then once you enter the enable password, AAA/MEMORY runs ""free_user"" and removes that ""NULL"" user from memory, so you are again back to the ""blank"" user that you used when initially logging in via the console.",,,
49,,aaa authorization commands 0 default group tacacs+ local none,,"! By default, there are three command levels on the router:

Privilege Level 0 (includes the disable, enable, exit, help, and logout commands)
Privilege Level 1 (includes all ""user""-level commands at the router> or switch> prompt
Privilege Level 15 (includes all direct ""enable""-level commands at the router# or switch# prompt (i.e. any commands that you would run directly from the router# or switch# prompt. NOTE that this does not include commands at another level of enable mode, i.e. ""configuration"" commands as that would be from the router(config)# or switch(config)# prompt, not the direct ""enable""-level prompt. If you wanted to perform authorization for configuration commands, you would use ""aaa authorization config-commands"" but we specifically do not do this. So, when you are troubleshooting a device where tacacs is not working, it is beneficial to run your ""show"" commands from the ""config"" prompt as you will not have to wait for the tacacs timeout for every command (i.e. run ""conf t"" and then run ""do show"" for any show commands).

We define the levels in 3 separate commands here, so that users are authorized in increasing levels starting at the lowest level and working upward. The ""default"" named list is used (basically the ""built-in"" named list), and TACACS+ authorization is tried first (See above for ""group tacacs+"" explanation), and if no response, local authorization is tried, and if no response, the ""none"" authorization method indicates that no authorization is performed, i.e. the authorization attempt is considered a failure.",,,
50,,aaa authorization commands 1 default group tacacs+ local none ,,"! By default, there are three command levels on the router:

Privilege Level 0 (includes the disable, enable, exit, help, and logout commands)
Privilege Level 1 (includes all ""user""-level commands at the router> or switch> prompt
Privilege Level 15 (includes all direct ""enable""-level commands at the router# or switch# prompt (i.e. any commands that you would run directly from the router# or switch# prompt. NOTE that this does not include commands at another level of enable mode, i.e. ""configuration"" commands as that would be from the router(config)# or switch(config)# prompt, not the direct ""enable""-level prompt. If you wanted to perform authorization for configuration commands, you would use ""aaa authorization config-commands"" but we specifically do not do this. So, when you are troubleshooting a device where tacacs is not working, it is beneficial to run your ""show"" commands from the ""config"" prompt as you will not have to wait for the tacacs timeout for every command (i.e. run ""conf t"" and then run ""do show"" for any show commands).

We define the levels in 3 separate commands here, so that users are authorized in increasing levels starting at the lowest level and working upward. The ""default"" named list is used (basically the ""built-in"" named list), and TACACS+ authorization is tried first (See above for ""group tacacs+"" explanation), and if no response, local authorization is tried, and if no response, the ""none"" authorization method indicates that no authorization is performed, i.e. the authorization attempt is considered a failure.",,,
51,,aaa authorization commands 15 default group tacacs+ local none,,"! By default, there are three command levels on the router:

Privilege Level 0 (includes the disable, enable, exit, help, and logout commands)
Privilege Level 1 (includes all ""user""-level commands at the router> or switch> prompt
Privilege Level 15 (includes all direct ""enable""-level commands at the router# or switch# prompt (i.e. any commands that you would run directly from the router# or switch# prompt. NOTE that this does not include commands at another level of enable mode, i.e. ""configuration"" commands as that would be from the router(config)# or switch(config)# prompt, not the direct ""enable""-level prompt. If you wanted to perform authorization for configuration commands, you would use ""aaa authorization config-commands"" but we specifically do not do this. So, when you are troubleshooting a device where tacacs is not working, it is beneficial to run your ""show"" commands from the ""config"" prompt as you will not have to wait for the tacacs timeout for every command (i.e. run ""conf t"" and then run ""do show"" for any show commands).

We define the levels in 3 separate commands here, so that users are authorized in increasing levels starting at the lowest level and working upward. The ""default"" named list is used (basically the ""built-in"" named list), and TACACS+ authorization is tried first (See above for ""group tacacs+"" explanation), and if no response, local authorization is tried, and if no response, the ""none"" authorization method indicates that no authorization is performed, i.e. the authorization attempt is considered a failure.",,,
52,,aaa accounting exec default start-stop group tacacs+,,"! The AAA accounting feature enables you to track the services that users are accessing and the amount of network resources that they are consuming. Specifically, EXEC accounting provides information about user EXEC terminal sessions on the router/switch, such as session time, and start and stop time. This is setup using the same principles as authentication and authorization. So here, we're saying the ""default"" behavior (i.e. we're using the ""default"" named list which is applied everywhere by default, so it's basically the ""built-in"" named list) is to authenticate the user using TACACS+ only, with no backup method. Also, the ""start-stop"" part of the command means to send accounting information to the AAA server once the user is authenticated, and also after the user disconnects (as opposed to the ""stop"" keyword which would only send the accounting information to the AAA server after the user disconnects). See above for explanation on the ""group tacacs+"" keywords.",,,
53,,aaa accounting commands 1 default start-stop group tacacs+,,"! This is the same as the ""authorization commands"" above, but for accounting purposes. Thus, accounting messages are sent for the corresponding privilege level commands. Just as with the above ""authorization commands,"" we start at the lowest privilege level and work upwards. Also, here TACACS+ is the only accounting method used, and the ""Start-stop"" keyword is used (meaning accounting information is sent to the AAA server once the user is authenticated, and also after the user disconnects (as opposed to the ""stop"" keyword which would only send the accounting information to the AAA server after the user disconnects)). See above for en explanation on the ""group tacacs+"" keywords.",,,
54,,aaa accounting commands 5 default start-stop group tacacs+,,"! This is the same as the ""authorization commands"" above, but for accounting purposes. Thus, accounting messages are sent for the corresponding privilege level commands. Just as with the above ""authorization commands,"" we start at the lowest privilege level and work upwards. Also, here TACACS+ is the only accounting method used, and the ""Start-stop"" keyword is used (meaning accounting information is sent to the AAA server once the user is authenticated, and also after the user disconnects (as opposed to the ""stop"" keyword which would only send the accounting information to the AAA server after the user disconnects)). See above for en explanation on the ""default"" and ""group tacacs+"" keywords.",,,
55,,aaa accounting commands 15 default start-stop group tacacs+,,"! This is the same as the ""authorization commands"" above, but for accounting purposes. Thus, accounting messages are sent for the corresponding privilege level commands. Just as with the above ""authorization commands,"" we start at the lowest privilege level and work upwards. Also, here TACACS+ is the only accounting method used, and the ""Start-stop"" keyword is used (meaning accounting information is sent to the AAA server once the user is authenticated, and also after the user disconnects (as opposed to the ""stop"" keyword which would only send the accounting information to the AAA server after the user disconnects)). See above for en explanation on the ""default"" and ""group tacacs+"" keywords.",,,
56,,!,,,,,
57,,clock timezone CST -6 0,,time parameters from pick list,,,
58,,clock summer-time CDT 2 sun mar 02:00 1 sun nov 02:00,,time parameters from pick list - some routers use this syntax,,,
59,,clock summer-time CDT recurring 2 sun mar 02:00 1 sun nov 02:00,,time parameters from pick list - some routers use this syntax,,,
60,,!,,,,,
61,,system mtu routing 1500,,! Changes the system MTU specifically for routed ports. The system routing MTU is the Maximum Transmission Unit for routed packets and is also the Maximum Transmission Unit that the switch advertises in routing updates for protocols such as OSPF.,,,
62,,!,,,,,
63,,ip classless,,"! Tells IOS to use classless routing, which has been the default since the late 90's. It tells IOS to check the routing table and use longest prefix matching to find the best match. If you don't have a best match, then use the default route if you have one. The other method is called ""classful routing"" where the IP routing is based on the classic address classes and subnet masks for Classes A, B, and C.",,,
64,,ip subnet-zero,,"! Tells IOS you can use the ""all zeroes"" subnet in a particular subnet range. For example, if you had subnet 10.0.0.0/16, normally you would not be allowed to use the 10.0 subnet as it is the ""zero"" subnet for that range (basically the subnet ID). The ip subnet-zero command allows us to use the ""zero"" subnet in a particular subnet range. This command should be default in IOS today, but it is good to include it anyway.",,,
65,,no ip source-route,,"! Source-routing is an IP option that lets a packet specify the route it should take to its destination, instead of letting the intermediate gateways determine the route. This is a potential security risk and is why we disable it.",,,
66,,no ip finger,,"! IP Finger is the newer version of the ""service finger"" command from above. We go ahead and run the ""no"" version of both commands to disable the finger service.",,,
67,,ip ssh dscp 16,,! Specifies the DSCP marking that can be set for a Secure Shell (SSH) configuration.,,,
68,,ip tftp source-interface ,,! Specifies the source interface for TFTP traffic.,,,
69,,ip ftp source-interface ,,! Specifies the source interface for FTP traffic.,,,
70,,ip ssh source-interface ,,"! Specifies the source interface for SSH traffic. Per the Cisco.com forums, this controls sessions *initiated* from the switch/router. It does not change how you SSH into the switch/router.",,,
71,,!,,,,,
72,,ip name-server 155.191.182.135,,! Specifies the primary DNS server for name lookups,,,
73,,ip name-server 158.139.212.31,,! Specifies the secondary DNS server for name lookups,,,
74,,!,,! Specifies the tertiary DNS server for name lookups,,,
75,,ip domain timeout 1,,"! Sets the DNS timeout to 1 second, so any DNS queries will timeout after 1 second of no response.",,,
76,,!,,,,,
77,,ip domain-lookup,,! Enables the DNS lookup feature (basically enables DNS).,,,
78,,ip domain-list conocophillips.net,,"! Adds an entry to the DNS suffix list. The suffix list is tried first in a name lookup, i.e. entries in the suffix list will be appended to the DNS query first, then if unresolved, the original DNS query will be attempted as is.",,,
79,,ip domain-list conoco.net,,"! Adds an entry to the DNS suffix list. The suffix list is tried first in a name lookup, i.e. entries in the suffix list will be appended to the DNS query first, then if unresolved, the original DNS query will be attempted as is.",,,
80,,ip domain-lookup source-interface ,,! Specifies the source interface for DNS name lookups.,,,
81,,ip domain-name cop.net,,"! needed for ssh. This command (along with the hostname command) is used in generating crypto keys. In testing with WireShark in EVE-NG, IF there are no domain-list commands configured, then this value is also used as a DNS suffix for DNS name lookups. If any domain-list commands are configured, they are used as DNS suffixes and this value is not used as a suffix for any DNS name lookups.",,,
82,,!,,,,,
83,,ip domain lookup,,"! Same as the ""domain"" commands just above, but without the ""-"" for newer code levels",,,
84,,ip domain list conocophillips.net,,"! Same as the ""domain"" commands just above, but without the ""-"" for newer code levels",,,
85,,ip domain list conoco.net,,"! Same as the ""domain"" commands just above, but without the ""-"" for newer code levels",,,
86,,ip domain lookup source-interface ,,"! Same as the ""domain"" commands just above, but without the ""-"" for newer code levels",,,
87,,ip domain name cop.net,,"! Same as the ""domain"" commands just above, but without the ""-"" for newer code levels",,,
88,,!,,,,,
89,,cdp run,,"! Enable the Cisco Discovery Protocol (CDP) globally. This differs from the ""cdp enable"" command, which is used on individual interfaces. The CDP protocol is enabled globally by default.",,,
90,,lldp run,,"! Enable the Link Layer Discovery Protocol (LLDP) globally. This is similar to CDP but is an IEEE standard (802.1AB), and thus is not proprietary to Cisco and provides interoperability between Cisco and non-Cisco devices for neighbor discovery. The LLDP protocol is enabled by default.",,,
91,,!,,,,,
92,,ip tacacs source-interface ,,! Specifies the source interface for TACACS+ packets.,,,
93,,no ip http server,,"! Disables the HTTP server on the device, which includes the Cisco web browser user interface.",,,
94,,no ip http secure-server,,"! Disables the HTTPS server on the device, which includes the Cisco web browser user interface.",,,
95,,!,,,,,
96,,!,,,,,
97,,logging trap notifications,,"! Limits messages logged to the syslog servers based on severity (in this case, the ""notification"" severity, which is Level 5 on a scale of 0-7). So any messages from levels 0-5 will be logged to the syslog servers.",,,
98,,logging source-interface ,,! Specifies the source interface for system logging packets,,,
99,,logging 158.139.170.25,,"! Specifies the IP address of a syslog server to send log messages to. This command uses the default syslog port UDP 514, while the newer ""logging host"" command allows you to specify a custom port if required.",,,
100,,logging 158.139.2.218,,"! Specifies the IP address of a syslog server to send log messages to. This command uses the default syslog port UDP 514, while the newer ""logging host"" command allows you to specify a custom port if required.",,,
101,,!,,"! Specifies the IP address of a syslog server to send log messages to. This command uses the default syslog port UDP 514, while the newer ""logging host"" command allows you to specify a custom port if required.",,,
102,,!,,"! Specifies the IP address of a syslog server to send log messages to. This command uses the default syslog port UDP 514, while the newer ""logging host"" command allows you to specify a custom port if required.",,,
103,,!,,"! Specifies the IP address of a syslog server to send log messages to. This command uses the default syslog port UDP 514, while the newer ""logging host"" command allows you to specify a custom port if required.",,,
104,,!,,"! DMZ - Specifies the IP address of a syslog server to send log messages to. This command uses the default syslog port UDP 514, while the newer ""logging host"" command allows you to specify a custom port if required.",,,
105,,!,,,,,
106,,ip device tracking probe delay 10,,"! errors with devices booting - added 6/18/15. Note that in IOS_XE version 16.X and above (I think around 16.3.7), this ""probe delay"" value is set to 10 by default and cannot be changed (the commands are not even available anymore as the IPDT feature has moved to SISF-based Device-Tracking starting in 16.3.7).   The purpose of IP Device Tracking (IPDT) is for the switch to obtain and maintain a list of devices that are connected to the switch via an IP address. To do this, it sends unicast ARP probes with a default interval of 30 seconds; these probes are sent to the MAC address of the host connected on the other side of the link, and use the MAC address of the egress interface as the source L2 address, and a sender IP (L3) address of 0.0.0.0 (per RFC 5227, so we don't pollute ARP caches if the address turns out to already be used. We won't pollute ARP caches because the ARP Probe is sent with a Source IP of 0.0.0.0, and a Destination MAC of 00:00:00:00:00:00 , and since no mapping between a MAC and an IP can occur when one of them is all 0's, both the Source IP and MAC and Destination IP and MAC cannot be mapped to each other in an ARP table by any remote devices. Since the Source IP is set to all 0's, it cannot map to the Source MAC address, and since the Destination MAC address is all 0's , it cannot be mapped to the Destination IP address). These ARP probes do not populate the tracking entry in the IPDT table on the switch; they are simply used in order to activate and maintain the entry in the table after it is learned through an ARP request/reply from the host. The issue is how these ARP Probes are used by hosts. Per RFC 5227 Section 2.1.1, an ARP Probe is used by a host to determine whether an IP Address is already in use. The host sends out an ARP Probe packet to the IP address they are wanting to use, and if no one replies, then they know the IP address is available for use. If someone replies with that address, then the host knows that IP Address is already in use (this is why the source IP of the ARP Probe is 0.0.0.0, so we don't pollute other devices' ARP caches with a bogus address that we haven't validated yet). However, per RFC 5227 Section 2.1.1, if during this period of ARP Probing, the host itself receives an ARP Probe where the ""Target IP address"" is the IP address that the host was probing for in the first place, then the host should treat this as an address conflict (i.e. a duplicate IP address conflict) and signal an error. Thus, if we left IPDT with default settings on the switch (ARP Probes sent every 30 seconds), we could cause inadvertent ""duplicate address"" conflicts with hosts, when no such conflict actually occurs. Thankfully, the RFC specifies a 10-second window for duplicate address detection (i.e. the host has 10 seconds to check for duplicate IP addresses), so if you enter the ""ip device tracking probe delay 10"" command, it does not allow the switch to send an ARP Probe for 10 seconds when it detects a link UP/flap, which minimizes the possibility to have the probe sent while the host on the other side of the link checks for duplicate IP addresses. Thus, the switch won't cause an inadvertent duplicate address detection on the host since it will wait 10 seconds for the host to finish its allotted time for duplicate address detection.  ALSO note that this ARP Probe is technically different from a Gratuitous ARP, since a Gratuitous ARP is MEANT to update all the ARP caches on the network, while an ARP Probe deliberately prevents updating of ARP caches to continue protecting against IP address conflicts.",,,
107,,!,,,,,
108,,no ip forward-protocol udp domain ,,"! Enabling a helper address or UDP flooding on an interface causes the Cisco IOS software to forward certain broadcast/service packets to the specified helper ip address. There are 2 ways you can configure an ip helper. First, you would need to specify an ip address that you want to relay the certain broadcast messages to. You would use the ""ip helper-address"" command for this. Now by default, this command not only specifies the helper IP address, but also specifies 8 default types of UDP broadcasts that it will relay to that helper IP address (Time (37), TACACS (49), DNS (53), BOOTP/DHCP Server (67), BOOTP/DHCP Client (68), TFTP (69), NetBIOS name service (137), NetBIOS datagram service (138) ). Now, if you didn't want certain of those UDP broadcasts to be relayed to the helper, you can use the ""ip forward-protocol"" command, which also forwards the default 8 but you can run the ""no"" version of the command to remove certain types of UDP broadcasts. Also, with this ""ip forward-protocol"" command you can specify to forward a UDP broadcast that isn't in the list of 8 that are forwarded via the ""ip helper-address"" command (essentially the ""ip forward-protocol"" command in IOS allows an administrator to forward any UDP port in addition to the default 8 (so you can specify exactly which types of broadcast packets you would like to have forwarded), AND you can also remove any of the default 8 UDP broadcasts from the list of UDP broadcasts sent to the helper). So, in our design, we want to disable 6 out of the 8 UDP protocols that are forwarded by default, and just leave the DHCP server and DHCP client UDP ports to be forwarded to the helper. This particular command disables forwarding of DNS broadcasts (port 53)",,,
109,,no ip forward-protocol udp netbios-dgm ,,"! Same as above, but for NetBIOS Datagram Server (port 138)",,,
110,,no ip forward-protocol udp netbios-ns ,,"! Same as above, but for NetBIOS Name Server (port 137)",,,
111,,no ip forward-protocol udp tacacs ,,"! Same as above, but for the TACACS service (port 49)",,,
112,,no ip forward-protocol udp tftp ,,"! Same as above, but for TFTP (port 69)",,,
113,,no ip forward-protocol udp time ,,"! Same as above, but for the Time service (port 37)",,,
114,,!,,,,,
115,,mls qos,,"! these line may be fail depending on platform (needed for MLS c3750, c3560, e.g)",,,
116,,qos,,! these line may be fail depending on platform (4500/4900),Enable QoS and DSCP Trust ,Note: Cisco Catalyst 3650/3850/6800 use IOS MQC QoS (like router platforms),
117,,!,,,,•,QoS is enabled by default
118,,access-list 66 permit 158.139.195.0 0.0.0.255,,! snmp ro ,,•,All wired ports trust at layer 2 and layer 3 by default
119,,access-list 66 permit 158.139.170.0 0.0.0.63,,! snmp ro ,,,
120,,access-list 66 permit 158.139.162.0 0.0.0.127,,! snmp ro ,,,
121,,access-list 66 permit 155.191.128.0 0.0.0.15,,! snmp ro ,,,
122,,access-list 66 permit 155.191.129.228,,! snmp ro ,,,
123,,access-list 66 permit 155.191.192.148,,! snmp ro ,,,
124,,access-list 66 permit 155.191.185.128,,! snmp ro ,,,
125,,access-list 66 permit 155.191.182.156 0.0.0.3,,! snmp ro ,,,
126,,access-list 66 permit 158.139.104.8 0.0.0.7,,! snmp ro ,,,
127,,access-list 66 permit 158.139.49.48 0.0.0.15,,! snmp ro ,,,
128,,access-list 66 permit 10.25.32.7,,! snmp ro ,,,
129,,access-list 66 permit 158.139.198.247,,! snmp ro ,,,
130,,access-list 66 permit 153.15.98.64 0.0.0.31,,! snmp ro ,,,
131,,access-list 66 permit 158.139.2.192 0.0.0.63,,! snmp ro ,,,
132,,access-list 66 permit 158.139.112.117,,! snmp ro ,,,
133,,!,,! snmp ro ,,,
134,,!,,! snmp ro ,,,
135,,!,,! snmp ro ,,,
136,,!,,! snmp ro ,,,
137,,!,,! snmp ro ,,,
138,,!,,! DMZ - snmp ro ,,,
139,,!,,,,,
140,,access-list 67 permit 158.139.170.24 0.0.0.3,,! SNMP RW,,,
141,,access-list 67 permit 158.139.2.218,,! SNMP RW,,,
142,,!,,! SNMP RW,,,
143,,!,,! DMZ - SNMP RW,,,
144,,!,,,,,
145,,ip access-list standard 88,,"! This ACL 88 (barely used) is used by other devices when they need to use SNMP (like a non-Cisco device like Solarwinds or something like that needs to read SNMP on our switches/routers, we give them a separate SNMP RO string instead of our standard SNMP RO string, and then we tie that separate SNMP RO string to a separate ACL (so ACL 88 instead of ACL 66 which is our ""standard"" RO ACL). So we will set this ACL 88 by default to deny everything, and we can go back later on a per-device basis and add ""permits"" to/remove ""denies"" from this ACL as needed.",,,
146,,deny any,,! Deny everything,,,
147,,!,,,,,
148,,errdisable recovery cause all,,"! The ""errdisable recovery"" command allows you to choose the type of errors that automatically reenable the ports after a specified amount of time (can use ""show errdisable recovery"" to see the default error-disable recovery state for all the possible conditions). The ""all"" keyword enables the timer to recover from all causes. Another nice feature of using ""errdisable recovery"" is that it lists general reasons that the ports have been put into the error-disable state, which you can see using the above ""show errdisable recovery"" command. Errdisable recovery is disabled by default in IOS (enabled by default in NX-OS).",,,
149,,errdisable recovery interval 300,,"! this is default. This is the timer used by the above ""errdisable recovery"" command. After each timer interval (in seconds), any errdisable ports will be enabled.",,,
150,,!,,,,,
151,,spanning-tree mode rapid ,,! Sets the Spanning-Tree mode to Rapid PVST+,,,
152,,spanning-tree portfast bpduguard default,,! Enables portfast and bpduguard by default (meaning it is applied to all interfaces by default),,,
153,,!,,,,,
154,,port-channel load-balance src-dst-ip,,! Default. Uses source and destination IP addresses for calculating load balancing on the port-channel.,,,
155,,!,,,,,
156,,snmp-server community XXXXXXXXXXX RO 66,,"! Sets the SNMP community string for Read-Only access, and restricts incoming SNMP messages based on the referenced ACL (so only devices allowed by the ACL are able to use this particular Community String). If the assigned ACL allows the incoming request packet, SNMP processes the request. If the ACL denies the request, SNMP drops the request and sends a system message. Also, the first time an snmp-server global command is configured, IOS enables the SNMP agent.",,,
157,,snmp-server community XXXXXXXXXXX RW 67,,"! Sets the SNMP community string for Read-Write access, and restricts incoming SNMP messages based on the referenced ACL (so only devices allowed by the ACL are able to use this particular Community String). If the assigned ACL allows the incoming request packet, SNMP processes the request. If the ACL denies the request, SNMP drops the request and sends a system message. Also, the first time an snmp-server global command is configured, IOS enables the SNMP agent.",,,
158,,snmp-server community XXXXXXXXXXX RO 88,,"! Sets the SNMP community string for Read-Only access, and restricts incoming SNMP messages based on the referenced ACL (so only devices allowed by the ACL are able to use this particular Community String). If the assigned ACL allows the incoming request packet, SNMP processes the request. If the ACL denies the request, SNMP drops the request and sends a system message. Also, the first time an snmp-server global command is configured, IOS enables the SNMP agent.",,,
159,,snmp-server trap-source ,,! Specifies the interface to use when sending SNMP Trap messages.,,,
160,,snmp-server location Canada,,! Sets the SNMP system location string,,,
161,,!,,,,,
162,,!,,,,,
163,,snmp-server ifindex persist,,"! Ifindex refers to the ""interface index"" which is a unique index number assigned to each interface. Normally these index numbers can change after a reboot, reload, etc. Thus, if a management application was polling a router's ifindex 3, which happened to be a Gigabit port, and then after a reboot the ifindex of 3 was assigned to the serial port on that router, the management application would end up monitoring the wrong port (it would have needed to be warned via a trap that the router rebooted). Thankfully, Cisco provides support for ifindex values to persist across reboots, which we enable here using the ""snmp-server ifindex persist"" command.",,,
164,,snmp-server enable traps,,! Enables the router to send SNMP traps.,,,
165,,snmp-server tftp-server-list 67,,"! Controls the TFTP servers used via SNMP. This command was replaced with the ""snmp-server file-transfer access-group"" command in IOS 12.4(12) and later.",,,
166,,snmp-server file-transfer access-group 67 protocol tftp,,! Newer version of the above command (some platforms like C9300 require this new format),,,
167,,snmp-server host 158.139.195.19 XXXXXXXXXXX,,"! Specifies the recipient of an SNMP notification operation, along with the community string that is sent with the notification operation.",,,
168,,snmp-server host 158.139.195.20 XXXXXXXXXXX,,"! Specifies the recipient of an SNMP notification operation, along with the community string that is sent with the notification operation.",,,
169,,snmp-server host 158.139.170.25 XXXXXXXXXXX,,"! Specifies the recipient of an SNMP notification operation, along with the community string that is sent with the notification operation.",,,
170,,snmp-server host 158.139.2.218 XXXXXXXXXXX,,"! Specifies the recipient of an SNMP notification operation, along with the community string that is sent with the notification operation.",,,
171,,!,,"! If Region Choice is ""Norway"" then add the SVG DNA Center box as an SNMP notification recipient",,,
172,,!,,"! DMZ - Specifies the recipient of an SNMP notification operation, along with the community string that is sent with the notification operation.",,,
173,,!,,,,,
174,,password encryption aes,,"! We want to be able to use ""type 6"" passwords, which are stored as 128-bit AES. To start using these ""type 6"" passwords, we need to do 2 things: (1) enable the AES Password Encryption feature, and (2) configure a master encryption key to encrypt and decrypt passwords. This command takes care of Step 1. FYI, per Cisco's documentation, ""After you enable AES password encryption and configure a master key, all the existing and newly created cleartext passwords for the supported applications are stored in type 6 encrypted format, unless you disable type 6 password encryption. You can also configure the device to convert all the existing weakly encrypted passwords to type 6 encrypted passwords.""",,,
175,,key config-key password-encrypt XXXXXXXXXX,,! Here we are taking care of Step 2 from above (configuring a master encryption key for encrypting and decrypting passwords).,,,
176,,!,,"! NOTE THAT THE ""AAA NEW-MODEL"" COMMAND ABOVE MUST BE RAN FOR THE BELOW ""TACACS SERVER"" COMMANDS TO BE AVAILABLE. If the ""aaa new-model"" command is not ran, you will only see the older ""tacacs-server"" style commands.",,,
177,,!,,"! Specifies the security protocol to use with AAA (TACACS+), as well as the server name of the host maintaining a TACACS+ server. The TACACS+ software searches for the hosts in the order specified, allowing us to set up a server list by preference.",,,
178,,!,,! Specifies the IP address of the entered TACACS server,,,
179,,!,,! Configures a TACACS+ shared secret key that is specific to this entered TACACS server. This key is used to authenticate the switch to this particular TACACS+ server.,,,
180,,!,,"! Specifies the security protocol to use with AAA (TACACS+), as well as the server name of the host maintaining a TACACS+ server. The TACACS+ software searches for the hosts in the order specified, allowing us to set up a server list by preference.",,,
181,,!,,! Specifies the IP address of the entered TACACS server,,,
182,,!,,! Configures a TACACS+ shared secret key that is specific to this entered TACACS server. This key is used to authenticate the switch to this particular TACACS+ server.,,,
183,,!,,"! Specifies the security protocol to use with AAA (TACACS+), as well as the server name of the host maintaining a TACACS+ server. The TACACS+ software searches for the hosts in the order specified, allowing us to set up a server list by preference.",,,
184,,!,,! Specifies the IP address of the entered TACACS server,,,
185,,!,,! Configures a TACACS+ shared secret key that is specific to this entered TACACS server. This key is used to authenticate the switch to this particular TACACS+ server.,,,
186,,!,,,,,
187,,!,,! FENCE TACACS,,,
188,,!,,! FENCE TACACS,,,
189,,!,,! FENCE TACACS,,,
190,,!,,! FENCE TACACS,,,
191,,!,,! FENCE TACACS,,,
192,,!,,! FENCE TACACS,,,
193,,!,,! FENCE TACACS,,,
194,,!,,! FENCE TACACS,,,
195,,!,,! FENCE TACACS,,,
196,,!,,,,,
197,,tacacs-server directed-request,,"! When doing TACACS authentication, by default the router will use the IP address which appears first in the configuration, and if that is not available, it will move down the list in like fashion. The ""tacacs-server directed-request"" command allows a user to specify a particular TACACS IP address for authentication, instead of using the first TACACS server listed in the configuration.",,,
198,,!,,,,,
199,,!,,,,,
200,,banner exec ^,,! Define a banner to show the user after authentication,,,
201,,***************************************,,,,,
202,,Location:     Bartlesville,,,,,
203,,Type:         Switch,,,,,
204,,Manufacturer: Cisco,,,,,
205,,Model:        ,,,,,
206,,Serial No:    ,,,,,
207,,***************************************,,,,,
208,,^,,,,,
209,,!,,,,,
210,,!,,,,,
211,,banner login ^,,! Define a banner to show the user upon connecting to the router (this is shown to the user before they authenticate),,,
212,,                        W A R N I N G !!!!!!!,,,,,
213,,,,,,,
214,,This is a private computer system to be accessed and used for,,,,,
215,,company business purposes.  All access to it must be specifically,,,,,
216,,authorized. Unauthorized access or use of this system is prohibited,,,,,
217,,and may expose you to liability under criminal and/or civil law.,,,,,
218,,,,,,,
219,,Unless provided for by a separate written agreement signed by the,,,,,
220,,"company, all information placed on this computer system is the",,,,,
221,,"property of the company. The company reserves the right to monitor,",,,,,
222,,"access, intercept, record, read, copy, capture and disclose all",,,,,
223,,"information received, sent through or stored in this computer",,,,,
224,,"system, without notice, for any purpose and at anytime.",,,,,
225,,,,,,,
226,,"By accessing, using and continuing to use this system, you agree to",,,,,
227,,"these terms of use, as the company may modify from time to time; you",,,,,
228,,agree to waive any right or expectation of privacy regarding this,,,,,
229,,system or your use of it; and you further warrant that you have,,,,,
230,,proper authorization to use this system.,,,,,
231,,,,,,,
232,,"                 IF YOU DO NOT AGREE, LOG OFF NOW.",,,,,
233,,^,,,,,
234,,!,,,,,
235,,line con 0,,,,,
236,, exec-timeout 30 0,,"! Configure the inactive session timeout on the console port or the virtual terminal (format is minutes / seconds), i.e. how long the EXEC session will stay active once the user becomes idle.",,,
237,, password 7 ,,! Set a local line password,,,
238,, logging synchronous,,! Prevent logging output from immediately interrupting your console session,,,
239,, login authentication NO-TACACS,,"! Here we implement the authentiation named method list ""NO-TACACS"" that we defined above in the AAA section.",,,
240,,exit,,,,,
241,,!,,,,,
242,,line vty 0 4,,,,,
243,, session-timeout 30,,"! Set the terminal inactivity timeout for the current session (format is minutes / seconds), i.e. how long the TCP connection will stay active once the user becomes idle.",,,
244,, exec-timeout 30 0,,"! Configure the inactive session timeout on the console port or the virtual terminal (format is minutes / seconds), i.e. how long the EXEC session will stay active once the user becomes idle.",,,
245,, password 7 ,,! Set a local line password,,,
246,, logging synchronous,,! Prevent logging output from immediately interrupting your console session,,,
247,, transport input ssh,,! Prevent non-SSH connections to these vty lines (i.e. only allow SSH connections),,,
248,, default escape-character,,! Define the character that terminates a running command to be the default character of Break (the default setting for Break is Ctrl-C),,,
249,, exit,,,,,
250,,!,,,,,
251,,line vty 5 15,,,,,
252,, session-timeout 30,,"! Set the terminal inactivity timeout for the current session (format is minutes / seconds), i.e. how long the TCP connection will stay active once the user becomes idle.",,,
253,, exec-timeout 30 0,,"! Configure the inactive session timeout on the console port or the virtual terminal (format is minutes / seconds), i.e. how long the EXEC session will stay active once the user becomes idle.",,,
254,, password 7 ,,! Set a local line password,,,
255,, logging synchronous,,! Prevent logging output from immediately interrupting your console session,,,
256,, transport input ssh,,! Prevent non-SSH connections to these vty lines (i.e. only allow SSH connections),,,
257,, default escape-character,,! Define the character that terminates a running command to be the default character of Break (the default setting for Break is Ctrl-C),,,
258,, exit,,,,,
259,,! Don't forget NTP and other config down below these extended VTY config lines!,,,,,
260,,!,,,,,
261,,!,,,,,
262,,!,,,,,
263,,!,,,,,
264,,!,,,,,
265,,!,,,,,
266,,!,,,,,
267,,!,,,,,
268,,!,,,,,
269,,no ntp clock-period,,"! Reset clock-period, regenerated automatically by IOS. NTP clock-period is a value that the router or switch calculates as it keeps track of the time from the server to which it has synced. The ""ntp clock-period"" command is added automatically to jump-start the NTP frequency compensation when the box is rebooted. The system automatically generates the ""ntp clock-period"" command as NTP determines the clock error and compensates. This is essentially a representation of the frequency of the crystal used as the local timebase, and may take several days to calculate otherwise. Basically, as NTP compensates for the error in the software clock, it keeps track of the correction factor for this error. When the value for the clock period needs to be adjusted, the system automatically enters the correct value into the running configuration (using the ""ntp clock-period [value]"" command). To remove the automatically generated value for the clock period, use the ""no ntp clock-period"" command, which will clear the current value (IOS will calculate a new value). This is a good way to force a clock refresh with NTP.",,,
270,,ntp source ,,! Specifies the source interface for NTP.,,,
271,,ntp server 155.191.128.133,,! Defines the primary NTP server.,,,
272,,ntp server 155.191.128.134,,! Defines a secondary NTP server.,,,
273,,ntp server 158.139.0.139,,! Defines a tertiary NTP server,,,
274,,ntp server 158.139.0.137,,! Defines a quaternary NTP server,,,
275,,!,,,,,
276,,crypto key generate rsa,,"! will not take until key is generated. Generates an RSA public/private key pair using the values of the ""hostname"" and ""ip domain-name"" commands from above. These keys are used by SSH. This command WILL NOT TAKE if the device has some kind of default hostname, e.g. ""Router"".",,,
277,,2048,,! Set the size of the RSA key modulus,,,
278,,,,,,,
279,,,,,,,
280,,,,,,,
281,,ip ssh time-out 120,,! Configure how long (in seconds) the router/switch will wait at the SSH prompt for a valid username/password to be entered before closing the connection.,,,
282,,ip ssh authentication-retries 3,,"! Configure the number of password prompts provided to the user (the number of prompts is actually the value entered, plus one. So here, the user will receive 4 password prompts before the connection is closed).",,,
283,,ip ssh version 2,,! Set the SSH version to Version 2,,,
284,,!,,,,,
285,,! Many devices do not have an aux port - double-check your device before pasting,,,,,
286,,line aux 0,,,,,
287,, session-timeout 30,,"! Set the terminal inactivity timeout for the current session (format is minutes / seconds), i.e. how long the TCP connection will stay active once the user becomes idle.",,,
288,, exec-timeout 30 0,,"! Configure the inactive session timeout on the console port or the virtual terminal (format is minutes / seconds), i.e. how long the EXEC session will stay active once the user becomes idle.",,,
289,, password 7 ,,! Set a local line password,,,
290,, logging synchronous,,! Prevent logging output from immediately interrupting your console session,,,
291,, login authentication NO-TACACS,,"! Here we implement the authentiation named method list ""NO-TACACS"" that we defined above in the AAA section.",,,
292,, exit,,,,,
293,,!,,,,,
294,,!,,,,,
295,,end,,,,,
